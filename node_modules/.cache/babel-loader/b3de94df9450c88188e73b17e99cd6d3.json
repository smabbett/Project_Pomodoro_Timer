{"ast":null,"code":"import _slicedToArray from\"/Users/sarahabbett/Documents/Repos/Project_Pomodoro_Timer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import classNames from'../utils/class-names';import{minutesToDuration,secondsToDuration}from'../utils/duration';import useInterval from'../utils/useInterval';import ChangeBreakTimer from'./ChangeBreakTimer';import ChangeFocusTimer from'./ChangeFocusTimer';import SessionRunning from'./SessionRunning';function Pomodoro(){// Timer starts out paused\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isTimerRunning=_useState2[0],setIsTimerRunning=_useState2[1];//Focus time starts at 25 minutes/1500 seconds\nvar _useState3=useState(1500),_useState4=_slicedToArray(_useState3,2),focusTimer=_useState4[0],setFocusTimer=_useState4[1];//Break time starts at 5 minutes/300 seconds\nvar _useState5=useState(300),_useState6=_slicedToArray(_useState5,2),breakTimer=_useState6[0],setBreakTimer=_useState6[1];//user inputted times for focus and break\nvar _useState7=useState(5),_useState8=_slicedToArray(_useState7,2),inputBreakTime=_useState8[0],setInputBreakTime=_useState8[1];var _useState9=useState(25),_useState10=_slicedToArray(_useState9,2),inputFocusTime=_useState10[0],setInputFocusTime=_useState10[1];var _useState11=useState('focus'),_useState12=_slicedToArray(_useState11,2),sessionType=_useState12[0],setSessionType=_useState12[1];var _useState13=useState(true),_useState14=_slicedToArray(_useState13,2),isSessionStopped=_useState14[0],setIsSessionStopped=_useState14[1];useInterval(function(){var audioEl=document.getElementsByClassName('audio-element')[0];if(sessionType==='focus'){setBreakTimer(inputBreakTime*60);setFocusTimer(Math.max(focusTimer-1,0));if(focusTimer===0){audioEl.play();setSessionType('break');}}if(sessionType==='break'){setFocusTimer(inputFocusTime*60);setBreakTimer(Math.max(breakTimer-1,0));if(breakTimer===0){audioEl.play();setSessionType('focus');}}// ToDo: Implement what should happen when the timer is running\n},isTimerRunning?1000:null);function playPause(){setIsSessionStopped(false);setIsTimerRunning(function(prevState){return!prevState;});}function stopSession(){setIsTimerRunning(false);setIsSessionStopped(true);setFocusTimer(1500);setBreakTimer(300);setInputBreakTime(5);setInputFocusTime(25);}return/*#__PURE__*/React.createElement(\"div\",{className:\"pomodoro\"},/*#__PURE__*/React.createElement(\"audio\",{className:\"audio-element\"},/*#__PURE__*/React.createElement(\"source\",{src:\"https://assets.coderrocketfuel.com/pomodoro-times-up.mp3\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(ChangeFocusTimer,{setFocusTimer:setFocusTimer,setInputFocusTime:setInputFocusTime,inputFocusTime:inputFocusTime,isTimerRunning:isTimerRunning})),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"float-right\"},/*#__PURE__*/React.createElement(ChangeBreakTimer,{setBreakTimer:setBreakTimer,setInputBreakTime:setInputBreakTime,isTimerRunning:isTimerRunning,inputBreakTime:inputBreakTime})))),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"btn-group btn-group-lg mb-2\",role:\"group\",\"aria-label\":\"Timer controls\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-primary\",\"data-testid\":\"play-pause\",title:\"Start or pause timer\",onClick:playPause},/*#__PURE__*/React.createElement(\"span\",{className:classNames({oi:true,'oi-media-play':!isTimerRunning,'oi-media-pause':isTimerRunning})})),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-secondary\",title:\"Stop the session\",onClick:stopSession,disabled:!isTimerRunning},/*#__PURE__*/React.createElement(\"span\",{className:\"oi oi-media-stop\"}))))),/*#__PURE__*/React.createElement(\"div\",null,isSessionStopped?null:/*#__PURE__*/React.createElement(SessionRunning,{inputFocusTime:inputFocusTime,inputBreakTime:inputBreakTime,focusTimer:focusTimer,breakTimer:breakTimer,sessionType:sessionType,isTimerRunning:isTimerRunning})));}export default Pomodoro;","map":{"version":3,"sources":["/Users/sarahabbett/Documents/Repos/Project_Pomodoro_Timer/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","minutesToDuration","secondsToDuration","useInterval","ChangeBreakTimer","ChangeFocusTimer","SessionRunning","Pomodoro","isTimerRunning","setIsTimerRunning","focusTimer","setFocusTimer","breakTimer","setBreakTimer","inputBreakTime","setInputBreakTime","inputFocusTime","setInputFocusTime","sessionType","setSessionType","isSessionStopped","setIsSessionStopped","audioEl","document","getElementsByClassName","Math","max","play","playPause","prevState","stopSession","oi"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport classNames from '../utils/class-names';\nimport { minutesToDuration, secondsToDuration } from '../utils/duration';\nimport useInterval from '../utils/useInterval';\nimport ChangeBreakTimer from './ChangeBreakTimer';\nimport ChangeFocusTimer from './ChangeFocusTimer';\nimport SessionRunning from './SessionRunning';\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  //Focus time starts at 25 minutes/1500 seconds\n  const [focusTimer, setFocusTimer] = useState(1500);\n  //Break time starts at 5 minutes/300 seconds\n  const [breakTimer, setBreakTimer] = useState(300);\n  //user inputted times for focus and break\n\n  const [inputBreakTime, setInputBreakTime] = useState(5);\n  const [inputFocusTime, setInputFocusTime] = useState(25);\n  const [sessionType, setSessionType] = useState('focus');\n\n  const [isSessionStopped, setIsSessionStopped] = useState(true);\n\n  useInterval(\n    () => {\n      const audioEl = document.getElementsByClassName('audio-element')[0];\n\n      if (sessionType === 'focus') {\n        setBreakTimer(inputBreakTime * 60);\n        setFocusTimer(Math.max(focusTimer - 1, 0));\n        if (focusTimer === 0) {\n          audioEl.play();\n          setSessionType('break');\n        }\n      }\n\n      if (sessionType === 'break') {\n        setFocusTimer(inputFocusTime * 60);\n        setBreakTimer(Math.max(breakTimer - 1, 0));\n        if (breakTimer === 0) {\n          audioEl.play();\n          setSessionType('focus');\n        }\n      }\n      // ToDo: Implement what should happen when the timer is running\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsSessionStopped(false);\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  function stopSession() {\n    setIsTimerRunning(false);\n    setIsSessionStopped(true);\n    setFocusTimer(1500);\n    setBreakTimer(300);\n    setInputBreakTime(5);\n    setInputFocusTime(25);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <audio className=\"audio-element\">\n        <source src=\"https://assets.coderrocketfuel.com/pomodoro-times-up.mp3\"></source>\n      </audio>\n      <div className=\"row\">\n        <div className=\"col\">\n          <ChangeFocusTimer\n            setFocusTimer={setFocusTimer}\n            setInputFocusTime={setInputFocusTime}\n            inputFocusTime={inputFocusTime}\n            isTimerRunning={isTimerRunning}\n          />\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <ChangeBreakTimer\n              setBreakTimer={setBreakTimer}\n              setInputBreakTime={setInputBreakTime}\n              isTimerRunning={isTimerRunning}\n              inputBreakTime={inputBreakTime}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  'oi-media-play': !isTimerRunning,\n                  'oi-media-pause': isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={stopSession}\n              disabled={!isTimerRunning}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {isSessionStopped ? null : (\n          <SessionRunning\n            inputFocusTime={inputFocusTime}\n            inputBreakTime={inputBreakTime}\n            focusTimer={focusTimer}\n            breakTimer={breakTimer}\n            sessionType={sessionType}\n            isTimerRunning={isTimerRunning}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}