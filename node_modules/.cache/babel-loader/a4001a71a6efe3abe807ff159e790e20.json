{"ast":null,"code":"var _jsxFileName = \"/Users/sarahabbett/Documents/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from 'react';\nimport classNames from '../utils/class-names';\nimport { minutesToDuration, secondsToDuration } from '../utils/duration';\nimport useInterval from '../utils/useInterval';\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); //Focus time starts at 25 minutes/1500 seconds\n\n  const [focusTimer, setFocusTimer] = useState(1500); //Break time starts at 5 minutes/300 seconds\n\n  const [breakTimer, setBreakTimer] = useState(300); //user inputted times for focus and break\n\n  const [inputFocusTime, setInputFocusTime] = useState(25);\n  const [inputBreakTime, setInputBreakTime] = useState(5);\n  const [isSessionStopped, setIsSessionStopped] = useState(true); //increase FocusTime no more than 60 minutes\n\n  const handleIncreaseFocusClick = () => {\n    setInputFocusTime(Math.min(inputFocusTime + 5, 60));\n    setFocusTimer(focusTimer => focusTimer = inputFocusTime * 60);\n  }; //decrease FocusTime no less than 5 minutes\n\n\n  const handleDecreaseFocusClick = () => {\n    setInputFocusTime(Math.max(inputFocusTime - 5, 5));\n    setFocusTimer(focusTimer => focusTimer = inputFocusTime * 60);\n  }; //increase BreakTime no more than 15 minutes\n\n\n  const handleIncreaseBreakClick = () => {\n    setInputBreakTime(Math.min(inputBreakTime + 1, 15));\n    setBreakTimer(breakTimer => breakTimer = inputBreakTime * 60);\n  }; //decrease BreakTime no less than 1 minute\n\n\n  const handleDecreaseBreakClick = () => {\n    setInputBreakTime(Math.max(inputBreakTime - 1, 1));\n    setBreakTimer(breakTimer => breakTimer = inputBreakTime * 60);\n  };\n\n  useInterval(() => {\n    console.log('focus, break', focusTimer, breakTimer);\n    setFocusTimer(Math.max(focusTimer - 1, 0));\n\n    if (focusTimer === 0) {\n      setBreakTimer(Math.max(breakTimer - 1, 0));\n    } // ToDo: Implement what should happen when the timer is running\n\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  function stopSession() {\n    setIsTimerRunning(false);\n    setIsSessionStopped(true);\n    setFocusTimer(1500);\n    setBreakTimer(300);\n    setInputBreakTime(5);\n    setInputFocusTime(25);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(inputFocusTime)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: handleDecreaseFocusClick,\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: handleIncreaseFocusClick,\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(inputBreakTime)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: handleDecreaseBreakClick,\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: handleIncreaseBreakClick,\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      'oi-media-play': !isTimerRunning,\n      'oi-media-pause': isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: stopSession,\n    disabled: !isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames({\n      invisible: isSessionStopped,\n      visible: !isSessionStopped\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, focusTimer > 0 ? `Focusing for ${minutesToDuration(inputFocusTime)} minutes` : `On Break for ${minutesToDuration(inputBreakTime)} minutes`), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, focusTimer > 0 ? secondsToDuration(focusTimer) : secondsToDuration(breakTimer), ' ', \"remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": focusTimer / 60 // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${100 - focusTimer / (inputFocusTime * 60) * 100}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/sarahabbett/Documents/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","minutesToDuration","secondsToDuration","useInterval","Pomodoro","isTimerRunning","setIsTimerRunning","focusTimer","setFocusTimer","breakTimer","setBreakTimer","inputFocusTime","setInputFocusTime","inputBreakTime","setInputBreakTime","isSessionStopped","setIsSessionStopped","handleIncreaseFocusClick","Math","min","handleDecreaseFocusClick","max","handleIncreaseBreakClick","handleDecreaseBreakClick","console","log","playPause","prevState","stopSession","oi","invisible","visible","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport classNames from '../utils/class-names';\nimport { minutesToDuration, secondsToDuration } from '../utils/duration';\nimport useInterval from '../utils/useInterval';\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  //Focus time starts at 25 minutes/1500 seconds\n  const [focusTimer, setFocusTimer] = useState(1500);\n  //Break time starts at 5 minutes/300 seconds\n  const [breakTimer, setBreakTimer] = useState(300);\n  //user inputted times for focus and break\n  const [inputFocusTime, setInputFocusTime] = useState(25);\n  const [inputBreakTime, setInputBreakTime] = useState(5);\n\n  const [isSessionStopped, setIsSessionStopped] = useState(true);\n\n  //increase FocusTime no more than 60 minutes\n  const handleIncreaseFocusClick = () => {\n    setInputFocusTime(Math.min(inputFocusTime + 5, 60));\n    setFocusTimer((focusTimer) => (focusTimer = inputFocusTime * 60));\n  };\n  //decrease FocusTime no less than 5 minutes\n  const handleDecreaseFocusClick = () => {\n    setInputFocusTime(Math.max(inputFocusTime - 5, 5));\n    setFocusTimer((focusTimer) => (focusTimer = inputFocusTime * 60));\n  };\n  //increase BreakTime no more than 15 minutes\n  const handleIncreaseBreakClick = () => {\n    setInputBreakTime(Math.min(inputBreakTime + 1, 15));\n    setBreakTimer((breakTimer) => (breakTimer = inputBreakTime * 60));\n  };\n  //decrease BreakTime no less than 1 minute\n  const handleDecreaseBreakClick = () => {\n    setInputBreakTime(Math.max(inputBreakTime - 1, 1));\n    setBreakTimer((breakTimer) => (breakTimer = inputBreakTime * 60));\n  };\n\n  useInterval(\n    () => {\n      console.log('focus, break', focusTimer, breakTimer);\n      setFocusTimer(Math.max(focusTimer - 1, 0));\n      if (focusTimer === 0) {\n        setBreakTimer(Math.max(breakTimer - 1, 0));\n      }\n\n      // ToDo: Implement what should happen when the timer is running\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  function stopSession() {\n    setIsTimerRunning(false);\n    setIsSessionStopped(true);\n    setFocusTimer(1500);\n    setBreakTimer(300);\n    setInputBreakTime(5);\n    setInputFocusTime(25);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(inputFocusTime)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={handleDecreaseFocusClick}\n                disabled={isTimerRunning}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={handleIncreaseFocusClick}\n                disabled={isTimerRunning}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(inputBreakTime)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={handleDecreaseBreakClick}\n                  disabled={isTimerRunning}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={handleIncreaseBreakClick}\n                  disabled={isTimerRunning}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  'oi-media-play': !isTimerRunning,\n                  'oi-media-pause': isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={stopSession}\n              disabled={!isTimerRunning}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        className={classNames({\n          invisible: isSessionStopped,\n          visible: !isSessionStopped,\n        })}\n      >\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            <h2 data-testid=\"session-title\">\n              {focusTimer > 0\n                ? `Focusing for ${minutesToDuration(inputFocusTime)} minutes`\n                : `On Break for ${minutesToDuration(inputBreakTime)} minutes`}\n            </h2>\n            {/* TODO: Update message below to include time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {focusTimer > 0\n                ? secondsToDuration(focusTimer)\n                : secondsToDuration(breakTimer)}{' '}\n              remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: '20px' }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={focusTimer / 60} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{\n                  width: `${100 - (focusTimer / (inputFocusTime * 60)) * 100}%`,\n                }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}